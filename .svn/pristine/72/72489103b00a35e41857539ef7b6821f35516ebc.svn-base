<?php

namespace app\admin\controller;

use app\common\GameLog;
use think\Controller;
use think\Db;
use app\model\User as userModel;

use app\common\Api;

use redis\Redis;
use socket\QuerySocket;

class Playertrans extends Controller
{


    /**
     * 转出申请审核
     */
    public function apply()
    {

        if ($this->request->isAjax()) {

            $page    = intval(input('page')) ? intval(input('page')) : 1;
            $limit   = intval(input('limit')) ? intval(input('limit')) : 10;
            $roleId  = intval(input('roleid')) ? intval(input('roleid')) : 0;
            $start   = input('start') ? input('start') : '';
            $end     = input('end') ? input('end') : '';


            $OperateVerifyType = input('OperateVerifyType') ? input('OperateVerifyType') : 0;

            $payway = input('payway') ? input('payway') : 0;
            $realname = input('realname') ? input('realname') : '';


            $data = ['page' => $page, 'pagesize' => $limit, 'OperateVerifyType' => 0,'payway' => 0];

            $res = Api::getInstance()->sendRequest($data, 'charge', 'outlist');
            return $this->apiReturn($res['code'], $res['data'], $res['message'], $res['total']);
        }
        return $this->fetch();


    }

    /**
     * 财务审核
     */
    public function finance()
    {
        return $this->fetch('apply');
    }

    /**
     * 转出记录
     */
    public function record()
    {
        if ($this->request->isAjax()) {
            $page    = intval(input('page')) ? intval(input('page')) : 1;
            $limit   = intval(input('limit')) ? intval(input('limit')) : 10;
            $roleId  = intval(input('roleid')) ? intval(input('roleid')) : 0;
            $start   = input('start') ? input('start') : '';
            $end     = input('end') ? input('end') : '';
            $classid = input('classid') ? input('classid') : -1;

            $data = ['page' => $page, 'pagesize' => $limit];
            if ($roleId) {
                $data['roleid'] = $roleId;
            }
            if ($classid && $classid != -1) {
                $data['classid'] = $classid;
            }
            if ($start) {
                $data['starttime'] = $start;
                if ($end) {
                    $data['endtime'] = $end;
                }
            }
            $res = Api::getInstance()->sendRequest($data, 'charge', 'list');
            return $this->apiReturn($res['code'], $res['data'], $res['message'], $res['total']);
        }
        return $this->fetch();
    }

}
