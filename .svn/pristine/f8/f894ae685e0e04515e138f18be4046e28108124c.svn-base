<?php

namespace app\admin\controller;

use app\admin\controller\traits\search;
use app\common\Api;
use app\common\GameLog;
use socket\QuerySocket;
use app\admin\controller\traits\getSocketRoom;


class Room extends Main
{
    use getSocketRoom;
    use search;
    private $socket = null;

    public function __construct()
    {
        parent::__construct();
        $this->socket = new QuerySocket();
    }

    //获取房间库存概率信息
    public function getSocketRoomData()
    {
        $roomid    = input('roomid');
        $roomsData = $this->getSocketRoom($this->socket, $roomid);
        return $this->apiReturn(0, $roomsData, 'success');
    }


    //设置房间概率信息
    public function setSocketRoomRate()
    {
        $roomid  = intval(input('roomid')) ? intval(input('roomid')) : 0;
        $init    = intval(input('init')) ? intval(input('init')) : 0;
        $current = intval(input('current')) ? intval(input('current')) : 0;

        if (abs($init) > 2000000 || abs($current) > 2000000) {
            return $this->apiReturn(1, [], '库存值不能超过绝对值200万');
        }
        $roomsData = $this->getSocketRoom($this->socket, $roomid);

        $this->socket->setRoom($roomid, $roomsData['nCtrlRatio'], $init, $current, $roomsData['szStorageRatio']);
        GameLog::logData(__METHOD__, $this->request->request(), 1);
        ob_clean();
        return $this->apiReturn(0, [], '修改成功');
    }


    //设置房间库存信息
    public function setSocketRoomStorage()
    {
        if ($this->request->isAjax()) {
            $request = $this->request->request();
            $roomid  = $request['roomid'];
            $storage = json_decode($request['data'], true);
            ksort($storage);

            $storageStr = '';
            foreach ($storage as $k => $v) {
                if (abs($k) > 2000000) {
                    return $this->apiReturn(1, [], '库存值不能超过绝对值200万');
                }
                $storageStr .= $k . '#' . $v . '#';
            }
            $storageStr = rtrim($storageStr, '#');
            $roomsData  = $this->getSocketRoom($this->socket, $roomid);
            $this->socket->setRoom($roomid, $roomsData['nCtrlRatio'], $roomsData['nInitStorage'], $roomsData['nCurrentStorage'], $storageStr);

            GameLog::logData(__METHOD__, $request, 1);
            ob_clean();
            return $this->apiReturn(0, [], '修改成功');
        }

        $roomid                      = intval(input('roomid')) ? intval(input('roomid')) : 0;
        $roomsData                   = $this->getSocketRoom($this->socket, $roomid);
        $roomsData['szStorageRatio'] = trim($roomsData['szStorageRatio']);

        $array = [];
        if ($roomsData['szStorageRatio']) {

            $storage = explode('#', $roomsData['szStorageRatio']);
            $info    = array_chunk($storage, 2);

            if ($info) {
                foreach ($info as $k => $v) {
                    $array[] = [
                        'rate'    => $v[1],
                        'storage' => $v[0]
                    ];
                }
            }
        }


        $this->assign('lists', $array);
        $this->assign('thisroomid', $roomid);
        return $this->fetch('setstorage');
    }


    //百人场数据
    public function getHundredData()
    {
        $roomid = input('id');
        $res    = Api::getInstance()->sendRequest(['id' => $roomid], 'room', 'draw');
        if (isset($res['data']['list'])) {
            $index= 1;
            foreach ($res['data']['list'] as &$v) {
                $v['id'] = $index++;
            }
            unset($v);
        }
        return $this->apiReturn($res['code'], isset($res['data']['list']) ? $res['data']['list'] : [], $res['message'], $res['total'], isset($res['data']['topten']) ? $res['data']['topten'] : []);
    }

    /**
     * 设置玩家胜率
     */
    public function setPlayerRate()
    {

        if ($this->request->isAjax()) {
            $roleid       = intval(input('roleid')) ? intval(input('roleid')) : 0;
            $ratio        = intval(input('ratio')) ? intval(input('ratio')) : 0;
            $time         = intval(input('time')) ? intval(input('time')) : 0;
//            $timeinterval = intval(input('timeinterval')) ? intval(input('timeinterval')) : 0;
            $timeinterval = 10000000;
            $socket       = new QuerySocket();
            $socket->setRoleRate($roleid, $ratio, $time, $timeinterval);
            ob_clean();
            GameLog::logData(__METHOD__, $this->request->request());
            return $this->apiReturn(0, [], '修改成功');
        }

        $roleid       = intval(input('roleid')) ? intval(input('roleid')) : '';
        $ratio        = intval(input('ratio')) ? intval(input('ratio')) : '';
        $time         = intval(input('time')) ? intval(input('time')) : '';
//        $timeinterval = intval(input('timeinterval')) ? intval(input('timeinterval')) : '';
        $readonly     = intval(input('readonly')) ? intval(input('readonly')) : '';

        $this->assign('roleid', $roleid);
        $this->assign('ratio', intval($ratio));
        $this->assign('time', intval($time));
//        $this->assign('timeinterval', intval($timeinterval));
        $this->assign('read', intval($readonly));
        return $this->fetch();
    }

    /**
     * 查看伙牌
     */
    public function lookPartnerCard()
    {



        if(isset($_GET['roomid'])){
            $_SESSION['roomid'] = $_GET['roomid'];
        }


        if ($this->request->isAjax()) {
            $roomId=0;
            if(isset($_SESSION['roomid'])){
                $roomId=$_SESSION['roomid'];
//                unset($_SESSION['roomid']);
            }
            $page    = intval(input('page')) ? intval(input('page')) : 1;
            $limit   = intval(input('limit')) ? intval(input('limit')) : 10;
            $roleId  = intval(input('roleid')) ? intval(input('roleid')) : 0;
//            var_dump($roomId);die;
            $res = Api::getInstance()->sendRequest([
                'roleid'   => $roleId,
                'roomid'   => $roomId,
                'page'     => $page,
                'pagesize' => $limit
            ], 'game', 'getcart');


            return $this->apiReturn($res['code'], $res['data'], $res['message'], $res['total']);

        }

        return $this->fetch();
    }
    //查看玩家详情
    public function detail()
    {
        $roomId=0;
        if(isset($_GET['roomid'])){
            $_SESSION['roomid'] = $_GET['roomid'];
        }


        if ($this->request->isAjax()) {
            if(isset($_SESSION['roomid'])){
                $roomId=$_SESSION['roomid'];
                unset($_SESSION['roomid']);
            }
            $page    = intval(input('page')) ? intval(input('page')) : 1;
            $limit   = intval(input('limit')) ? intval(input('limit')) : 10;
            $roleId  = intval(input('roleid')) ? intval(input('roleid')) : 0;
            $res = Api::getInstance()->sendRequest([
                'roleid'   => $roleId,
                'roomid'   => $roomId,
                'page'     => $page,
                'pagesize' => $limit
            ], 'game', 'getcart');
//            if ($res['data']) {
//                foreach ($res['data'] as &$v) {
//                    //盈利
//                    $v['totalget'] = $v['totalin'] - $v['totalout'];
//                    //活跃度
//                    $v['huoyue'] = $v['totalin'] != 0 ? round($v['totalwater'] / $v['totalin'], 2) : 0;
//                }
//                unset($v);
//            }

            return $this->apiReturn($res['code'], $res['data'], $res['message'], $res['total']);

        }

        return $this->fetch();
    }
    /**
     * 房间总览
     */
    public function index()
    {
        $res = Api::getInstance()->sendRequest(['id' => 0], 'room', 'list');

        $this->assign('roomlist', isset($res['data']['ResultData']) ? $res['data']['ResultData'] : []);
        $this->assign('historytotal', isset($res['data']['historytotal']) ? $res['data']['historytotal'] : 0);
        $this->assign('currentscore', isset($res['data']['currentscore']) ? $res['data']['currentscore'] : 0);
        $this->assign('totalonline', isset($res['data']['totalonline']) ? $res['data']['totalonline'] : 0);
        return $this->fetch();
    }

    /**
     * 捕鱼
     */
    public function buyu()
    {
        $kindId = 2223;
        if ($this->request->isAjax()) {
        }
        $roomList = $this->getRoomById($kindId);
        $this->assign('roomlist', $roomList);
        return $this->fetch('danren');
    }

    /**
     * 抢庄牛牛
     */
    public function qzniuniu()
    {
        $kindId = 1010;
        if ($this->request->isAjax()) {

        }

        $roomList = $this->getRoomById($kindId);
        $this->assign('roomlist', $roomList);
        return $this->fetch('danren');
    }

    /**
     * 经典牛牛
     */
    public function jdniuniu()
    {
        $kindId = 1140;
        if ($this->request->isAjax()) {
        }
        $roomList = $this->getRoomById($kindId);
        $this->assign('roomlist', $roomList);
        return $this->fetch('danren');
    }

    /**
     * 二人麻将
     */
    public function majiang()
    {
        $kindId = 9006;
        if ($this->request->isAjax()) {
        }
        $roomList = $this->getRoomById($kindId);
        $this->assign('roomlist', $roomList);
        return $this->fetch('danren');
    }

    /**
     * 斗地主
     */
    public function doudizhu()
    {
        $kindId = 1072;
        if ($this->request->isAjax()) {

        }
        $roomList = $this->getRoomById($kindId);
        $this->assign('roomlist', $roomList);
//        return $this->fetch('danren');
        return $this->fetch();
    }

    /**
     * 获取房间数据
     * @return mixed
     */
    public function roomData()
    {
        $roomid = intval(input('roomid')) ? intval(input('roomid')) : 0;
        $res    = Api::getInstance()->sendRequest([
            'id' => $roomid
        ], 'room', 'list');
        return $this->apiReturn(
            $res['code'],
            isset($res['data']['ResultData'][0]) ? $res['data']['ResultData'][0] : [],
            $res['message'],
            $res['total']);
    }

    /**
     * 龙虎斗
     */
    public function longhudou()
    {
        $kindId = 1100;
        if ($this->request->isAjax()) {

        }
        $roomList = $this->getRoomById($kindId);
        $this->assign('roomlist', $roomList);
        return $this->fetch('bairen');
    }

    /**
     * 百家乐
     */
    public function bjl()
    {
        $kindId = 1150;
        if ($this->request->isAjax()) {
        }
        $roomList = $this->getRoomById($kindId);
        $this->assign('roomlist', $roomList);
        return $this->fetch('bairen');
    }

    /**
     * 奔驰宝马
     */
    public function bcbm()
    {
        $kindId = 500;
        if ($this->request->isAjax()) {
        }
        $roomList = $this->getRoomById($kindId);
        $this->assign('roomlist', $roomList);
        return $this->fetch('bairen');
    }

    /**
     * 飞禽走兽
     */
    public function fqzs()
    {
        $kindId = 1109;
        if ($this->request->isAjax()) {
        }
        $roomList = $this->getRoomById($kindId);
        $this->assign('roomlist', $roomList);
        return $this->fetch('bairen');
    }

    /**
     * 红黑大战
     */
    public function hhdz()
    {
        $kindId = 9005;
        if ($this->request->isAjax()) {
        }
        $roomList = $this->getRoomById($kindId);
        $this->assign('roomlist', $roomList);
        return $this->fetch('bairen');
    }

    /**
     * 百人牛牛
     */
    public function brnn()
    {
        $kindId = 9000;
        if ($this->request->isAjax()) {
        }
        $roomList = $this->getRoomById($kindId);
        $this->assign('roomlist', $roomList);
        return $this->fetch('bairen');
    }

    /**
     * Notes:红包扫雷
     */
    public function hbsl()
    {
        $kindId = 9004;
        if ($this->request->isAjax()) {
        }
        $roomList = $this->getRoomById($kindId);
        $this->assign('roomlist', $roomList);
        return $this->fetch('danren');
    }


    /**
     * Notes:水果拉霸
     */
    public function sglb()
    {
        $kindId = 3224;
        if ($this->request->isAjax()) {
        }
        $roomList = $this->getRoomById($kindId);
        $this->assign('roomlist', $roomList);
//        return $this->fetch('bairen');
        return $this->fetch('danren');
    }

    /**
     * Notes:欢乐骰宝
     */
    public function hlsb()
    {
        $kindId = 5007;
        if ($this->request->isAjax()) {
        }
        $roomList = $this->getRoomById($kindId);
        $this->assign('roomlist', $roomList);
        return $this->fetch('bairen');
    }
}
