<?php

namespace app\admin\controller;

use app\common\Api;
use app\common\GameLog;

use socket\QuerySocket;


class Yunwei extends Main
{
    //房间配置
    public function roomctrl()
    {
        if ($this->request->isAjax()) {
            $page     = intval(input('page')) ? intval(input('page')) : 1;
            $limit    = intval(input('limit')) ? intval(input('limit')) : 10;
            $kindid   = input('kindid') ? input('kindid') : 0;
            $serverip = input('serverip') ? input('serverip') : '';
            $roomname = input('roomname') ? input('roomname') : '';

            $data = [
                'serverip' => $serverip,
                'roomname' => $roomname,
                'kindid'   => $kindid,
                'page'     => $page,
                'pagesize' => $limit
            ];
            $res  = Api::getInstance()->sendRequest($data, 'room', 'roomlist');

            return $this->apiReturn($res['code'], isset($res['data']['ResultData']) ? $res['data']['ResultData'] : [], $res['message'], isset($res['data']['total']) ? $res['data']['total'] : 0);
        }
        $kindList = Api::getInstance()->sendRequest(['id'=>0], 'room', 'kindlist');
        $this->assign('kindlist', $kindList['data']);
        return $this->fetch();
    }


    //添加房间
    public function addroom()
    {
        if ($this->request->isAjax()) {

        }
        $tableList = Api::getInstance()->sendRequest(['id'=>0], 'room', 'tablelist');
        $this->assign('tablelist', $tableList['data']);
        $kindList = Api::getInstance()->sendRequest(['id'=>0], 'room', 'kindlist');
        $this->assign('kindlist', $kindList['data']);
        $serverList = Api::getInstance()->sendRequest(['id'=>1], 'room', 'serverlist');

        $this->assign('serverlist', $serverList['data']);
        return $this->fetch();
    }

    //获取游戏信息
    public function getKindInfo()
    {
        $kindid = intval(input('kindid')) ? intval(input('kindid')) : 0;
        $data   = [
            'code' => 0,
            'msg'  => '',
            'data' => ''
        ];
        if (!$kindid) {
            $data['code'] = 1;
            $data['msg']  = '请选择游戏';
            return json($data);
        }
        $kindInfo = Api::getInstance()->sendRequest(['id'=>$kindid], 'room', 'kindinfo');
        $data['data'] = $kindInfo['data'][0]['CustomField'] ? $kindInfo['data'][0]['CustomField'] : '';
        return json($data);
    }

    /**
     * 房间机器人管理
     */
    public function robotroom()
    {
        if ($this->request->isAjax()) {
            $page    = intval(input('page')) ? intval(input('page')) : 1;
            $limit   = intval(input('limit')) ? intval(input('limit')) : 10;
            $data = ['page' => $page, 'pagesize' => $limit];
            $res = Api::getInstance()->sendRequest($data, 'room', 'roomrobot');
            return $this->apiReturn($res['code'], $res['data'], $res['message'], $res['total']);
        }
        return $this->fetch();
    }

    /**
     * * Notes: 返回前端select标签里的内容
     * @return mixed
     */
    public function getRoomList()
    {
        $res = Api::getInstance()->sendRequest([
            'id' => 0
        ], 'room', 'kind');
        return $res['data'];
    }
    /**
     * Notes: 新增房间机器人管理
     * @return mixed
     */
//    public function addSuper()
    public function addRobot()
    {
        if ($this->request->isAjax()) {
            $request = $this->request->request();
            $insert = [
                'roomid'       => intval($request['roomid']) ? intval($request['roomid']) : 0,
                'maxcount' => intval($request['maxcount']) ? intval($request['maxcount']) : 0,
                'robotwinweighted'    => intval($request['robotwinweighted']) ? intval($request['robotwinweighted']) : '',
                'robotwinmoney'       => intval($request['robotwinmoney']) ? intval($request['robotwinmoney']) : 0,
                'servicetables'       => intval($request['servicetables']) ? intval($request['servicetables']) : 0,

                'addwinpre'       => intval($request['victory']) ? intval($request['victory']) : 0,
                'mintakescore'       => intval($request['minnum']) ? intval($request['minnum']) : 0,
                'maxtakescore'       => intval($request['maxnum']) ? intval($request['maxnum']) : 0,
                'minplaydraw'       => intval($request['mingame']) ? intval($request['mingame']) : 0,
                'maxplaydraw'       => intval($request['maxgame']) ? intval($request['maxgame']) : 0,
                'minreposetime'       => intval($request['mintime']) ? intval($request['mintime']) : 0,
                'maxreposetime'       => intval($request['maxtime']) ? intval($request['maxtime']) : 0,
                'minleavepre'       => intval($request['win']) ? intval($request['win']) : 0,
                'maxleavepre'       => intval($request['lost']) ? intval($request['lost']) : 0,
            ];
//            var_dump($insert);die;

            $res     = Api::getInstance()->sendRequest($insert, 'room', 'addroomrobot');

            //log记录
            GameLog::logData(__METHOD__, $request, (isset($res['code']) && $res['code'] == 0) ? 1 : 0, $res);
            return $this->apiReturn($res['code'], $res['data'], $res['message']);
        }
        $selectData = $this->getRoomList();
        $this->assign('selectData', $selectData);
        return $this->fetch();

    }

    /**
     * Notes: 编辑房间机器人管理
     * @return mixed
     */
//    public function editSuper()
    public function editRobot()
    {
        if ($this->request->isAjax()) {
            $request = $this->request->request();
            $data    = [
                'roomid'       => intval($request['roomid']) ? intval($request['roomid']) : 0,
                'maxcount' => intval($request['maxcount']) ? intval($request['maxcount']) : 0,
                'robotwinweighted'    => intval($request['robotwinweighted']) ? intval($request['robotwinweighted']) : '',
                'robotwinmoney'       => intval($request['robotwinmoney']) ? intval($request['robotwinmoney']) : 0,
                'servicetables'       => intval($request['servicetables']) ? intval($request['servicetables']) : 0,

                'addwinpre'       => intval($request['victory']) ? intval($request['victory']) : 0,
                'mintakescore'       => intval($request['minnum']) ? intval($request['minnum']) : 0,
                'maxtakescore'       => intval($request['maxnum']) ? intval($request['maxnum']) : 0,
                'minplaydraw'       => intval($request['mingame']) ? intval($request['mingame']) : 0,
                'maxplaydraw'       => intval($request['maxgame']) ? intval($request['maxgame']) : 0,
                'minreposetime'       => intval($request['mintime']) ? intval($request['mintime']) : 0,
                'maxreposetime'       => intval($request['maxtime']) ? intval($request['maxtime']) : 0,
                'minleavepre'       => intval($request['win']) ? intval($request['win']) : 0,
                'maxleavepre'       => intval($request['lost']) ? intval($request['lost']) : 0,

            ];
//            var_dump($data);die;
            $res     = Api::getInstance()->sendRequest($data, 'room', 'addroomrobot');

            //log记录
            GameLog::logData(__METHOD__, $request, (isset($res['code']) && $res['code'] == 0) ? 1 : 0, $res);
            return $this->apiReturn($res['code'], $res['data'], $res['message']);
        }

        $roomid = intval(input('roomid'));
        $res = Api::getInstance()->sendRequest(['id' => $roomid], 'room', 'roomrobotinfo');
        $this->assign('roomid', $res['data']['roomid']);
        $this->assign('maxcount', $res['data']['maxcount']);
        $this->assign('robotwinweighted', $res['data']['robotwinweighted']);
        $this->assign('robotwinmoney', $res['data']['robotwinmoney']);
        $this->assign('servicetables', $res['data']['servicetables']);
        $this->assign('addwinpre', $res['data']['addwinpre']);
        $this->assign('mintakescore', $res['data']['mintakescore']);
        $this->assign('maxtakescore', $res['data']['maxtakescore']);
        $this->assign('minplaydraw', $res['data']['minplaydraw']);
        $this->assign('maxplaydraw', $res['data']['maxplaydraw']);
        $this->assign('minreposetime', $res['data']['minreposetime']);
        $this->assign('maxreposetime', $res['data']['maxreposetime']);
        $this->assign('minleavepre', $res['data']['minleavepre']);
        $this->assign('maxleavepre', $res['data']['maxleavepre']);
        return $this->fetch();
    }
    /**
     * 激活房间机器人。
     */
    public function activeRoomRobot()
    {
        if ($this->request->isAjax()) {
            $request  = $this->request->request();
            $data   = [
                'roomid'     => intval($request['roomid']),

            ];
            $socket = new QuerySocket();
            $res    = $socket->DCActiveRoomRobot($data['roomid']);
            GameLog::logData(__METHOD__, $this->request->request(), 1);
            if (isset($res['iResult']) ) {
//                var_dump(44);die;
//                $res = Api::getInstance()->sendRequest($data, 'charge', 'add');
                //log记录
//                GameLog::logData(__METHOD__, $this->request->request(), 1);
                return $this->apiReturn(0, [], '激活成功');

            }
//            Redis::getInstance()->rm($key);
            return $this->apiReturn(3, [], '激活失败');
        }
        return $this->fetch();
    }

    /**
     * Notes: 删除房间机器人
     * @return mixed
     */
    public function deleteRobot()
    {
        $request  = $this->request->request();
        $res = Api::getInstance()->sendRequest(['id' => $request['roomid']], 'room', 'delroomrobot');

        //log记录
        GameLog::logData(__METHOD__, $request, (isset($res['code']) && $res['code'] == 0) ? 1 : 0, $res);
        return $this->apiReturn($res['code'], $res['data'], $res['message']);
    }
}
